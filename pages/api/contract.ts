// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import { getContract } from '@wagmi/core'
import { ethers } from 'ethers'
import type { NextApiRequest, NextApiResponse } from 'next'

const abi = [
	{
		inputs: [
			{
				internalType: 'address',
				name: '_verifier',
				type: 'address'
			}
		],
		stateMutability: 'nonpayable',
		type: 'constructor'
	},
	{
		inputs: [
			{
				internalType: 'uint256[2]',
				name: 'a',
				type: 'uint256[2]'
			},
			{
				internalType: 'uint256[2][2]',
				name: 'b',
				type: 'uint256[2][2]'
			},
			{
				internalType: 'uint256[2]',
				name: 'c',
				type: 'uint256[2]'
			},
			{
				internalType: 'uint256[48]',
				name: 'input',
				type: 'uint256[48]'
			}
		],
		name: 'add',
		outputs: [],
		stateMutability: 'nonpayable',
		type: 'function'
	},
	{
		inputs: [
			{
				internalType: 'bytes32',
				name: '',
				type: 'bytes32'
			}
		],
		name: 'companies',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string'
			}
		],
		stateMutability: 'view',
		type: 'function'
	},
	{
		inputs: [
			{
				internalType: 'bytes32',
				name: 'pubkey',
				type: 'bytes32'
			}
		],
		name: 'get',
		outputs: [
			{
				internalType: 'string',
				name: '',
				type: 'string'
			}
		],
		stateMutability: 'view',
		type: 'function'
	},
	{
		inputs: [],
		name: 'verifier',
		outputs: [
			{
				internalType: 'contract Verifier',
				name: '',
				type: 'address'
			}
		],
		stateMutability: 'view',
		type: 'function'
	}
]

const provider = new ethers.providers.JsonRpcProvider(process.env.RPC, 5)
const signer = new ethers.Wallet(process.env.PRIVKEY as any, provider)

const contract = getContract({
	address: '0x194f29F21120772b44b49C5Cc8CC1fA8E1073E9C',
	abi: abi,
	signerOrProvider: signer
})

type Data = {
	isVerified: boolean
}

export default async function handler(
	req: NextApiRequest,
	res: NextApiResponse<Data>
) {
	const data = await contract.add(
		[
			'0x0fc1df8f7493d121f4bd191c09a13218d9f3d3b572a929f3d7fd7e0302cbcda8',
			'0x09be72bc3c7aaf909fb8227ad13989849638f342daa59f73b62711a12b942963'
		],
		[
			[
				'0x133b5ba62eaa6448fd50150a597f3736d82a0ed6cdfb630854843f94ce1b1af4',
				'0x0ab61c58aa213c8949d8e8850efafc6cdb7e453e1a65e56b789bf7857e9d2d65'
			],
			[
				'0x2a3620251db3c91f2f28fdd5f813f7375df4b9aa069ef374ad2c2c49aca0d933',
				'0x080f384cbea5ce0459f86f076019907b8ad31f3a6a355dcabd67dbdf79ebd687'
			]
		],
		[
			'0x2929986e44f9cbabcebc1d5329435ab2748d6fe7e28e996326f35ff0a903370a',
			'0x08b3c9e11a23c0f5b7876ed412dbfd5b4179ddf15474761afc5ebe381b4a739b'
		],
		[
			'0x0000000000000000000000000000000000c8430c6464e64ddda07a9b863d8881',
			'0x0000000000000000000000000000000001cd0da2c4ae4218b0cade824b613b37',
			'0x000000000000000000000000000000000062e5c346b31c47a050182d2eafd848',
			'0x00000000000000000000000000000000000618669ce3a3538eaddc8d6ced08b9',
			'0x0000000000000000000000000000000000d75cdc8d790c81ab9c23625464a414',
			'0x00000000000000000000000000000000011954a4b6d45c95fa48f63ffec9f0ad',
			'0x0000000000000000000000000000000001e075c1b0cf7069eac655ee53f6cb80',
			'0x000000000000000000000000000000000060409af02b53bf34965950c557a044',
			'0x000000000000000000000000000000000016b77d2e3917ea5af4e7363a68cffe',
			'0x00000000000000000000000000000000007283ffb204c691aaf1bce0ac279328',
			'0x0000000000000000000000000000000001785e45f8b6da078bb330084a557dbd',
			'0x00000000000000000000000000000000003520db147c498f546c95853efc64f3',
			'0x0000000000000000000000000000000001a652f8aede242fe83a7af1091cc560',
			'0x000000000000000000000000000000000177e578067b3fc1873b4838e2597d79',
			'0x000000000000000000000000000000000082c7f533459aff65a02e6f635fae51',
			'0x0000000000000000000000000000000000a00bcf4e84dc9a972a8eab541dfb33',
			'0x000000000000000000000000000000000000dbbace12b0ce3ef3dcde63800d8b',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000062',
			'0x0000000000000000000000000000000000000000000000000000000000000065',
			'0x0000000000000000000000000000000000000000000000000000000000000072',
			'0x000000000000000000000000000000000000000000000000000000000000006b',
			'0x0000000000000000000000000000000000000000000000000000000000000065',
			'0x000000000000000000000000000000000000000000000000000000000000006c',
			'0x0000000000000000000000000000000000000000000000000000000000000065',
			'0x0000000000000000000000000000000000000000000000000000000000000079',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000',
			'0x0000000000000000000000000000000000000000000000000000000000000000'
		],
		{ gasLimit: 2000000 }
	)
	console.log('ðŸš€ ~ data', data)
	res.status(200).json({ isVerified: false })
}
